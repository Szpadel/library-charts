{{/*
This template serves as a blueprint for horizontal pod autoscaler objects that are created
using the common library.
*/}}
{{- define "common.classes.hpa" -}}
  {{- $fullName := include "common.names.fullname" . -}}
  {{- $hpaName := $fullName -}}
  {{- $values := dict -}}

  {{- if hasKey . "ObjectValues" -}}
    {{- with .ObjectValues.autoscaling -}}
      {{- $values = . -}}
    {{- end -}}
  {{- else -}}
    {{ fail "Internal error: missing .ObjectValues.autoscaling" }}
  {{- end -}}

  {{- if and (hasKey $values "nameOverride") $values.nameOverride -}}
    {{- $hpaName = printf "%v-%v" $hpaName $values.nameOverride -}}
  {{- end -}}


  {{- $targetName := include "common.names.fullname" . }}
  {{- $targetKind := include "common.names.controllerType" . -}}
  {{- $enabled := .Values.controller.enabled -}}

  {{- with $values.target -}}
    {{- if or (kindIs "string" .) (and (kindIs "map" .) (hasKey . "name") ) -}}
      {{- $name := . -}}
      {{- if kindIs "map" . -}}
        {{- $name = .name -}}
      {{- end -}}

      {{/* We are using using controller generated by this chart */}}
      {{- if not (hasKey $.Values.additionalControllers $name) -}}
        {{- fail (printf "hpa: unknown target %v" $name) -}}
      {{- end -}}
      {{- $controller := get $.Values.additionalControllers $name -}}

      {{- $targetName = printf "%v-%v" $targetName ($controller.nameOverride | default $name) -}}

      {{- if or (eq $controller.type "job") (eq $controller.type "cronjob") -}}
        {{- fail (printf "You cannot autoscale %v" $controller.type) -}}
      {{- end -}}

      {{- $_ := set $ "ObjectValues" (dict "controller" $controller) -}}
      {{- $targetKind = include "common.names.controllerType" $ -}}
      {{- $_ := unset $.ObjectValues "controller" -}}

      {{- $enabled = $controller.enabled -}}

    {{- else if and (kindIs "map" .) (hasKey . "fullName") -}}
      {{/* This might be custom resource */}}
      {{- $targetName = tpl .fullName $ -}}
      {{- $targetKind = required "when using fullName for autoscaling you have to provide targetKind" .kind -}}
    {{- else -}}
      {{- fail (printf "Unknown target kind %v for hpa %v" (kindOf .) $hpaName) -}}
    {{- end -}}
  {{- end -}}

{{- if $enabled -}}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ $hpaName }}
  labels: {{- include "common.labels" $ | nindent 4 }}
  annotations: {{- include "common.annotations" $ | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: {{ $targetKind }}
    name: {{ $targetName }}
  minReplicas: {{ $values.minReplicas | default 1 }}
  maxReplicas: {{ $values.maxReplicas | default 3 }}
  metrics:
    {{- if $values.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ $values.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if $values.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: {{ $values.targetMemoryUtilizationPercentage }}
    {{- end }}
  {{- end -}}
{{- end -}}
