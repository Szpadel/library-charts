suite: pod initContainers
templates:
  - common.yaml
tests:
  - it: with explicit name should pass
    documentIndex: &controllerDoc 0
    set:
      initContainers:
        init1:
          name: template-test
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: template-test

  - it: with implicit name should pass
    documentIndex: *controllerDoc
    set:
      initContainers:
        init1:
          image: template-test
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: init1

  - it: with templated name should pass
    documentIndex: *controllerDoc
    set:
      initContainers:
        init1:
          name: "{{ .Release.Name }}-container"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: RELEASE-NAME-container

  - it: with custom env vars dict should pass
    documentIndex: *controllerDoc
    set:
      initContainers:
        init1:
          env:
            int: 1
            float: 1.5
            string: value_of_env
            template: "{{ .Release.Name }}-admin"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.initContainers[0].env[0]
          value:
            name: float
            value: "1.5"
      - equal:
          path: spec.template.spec.initContainers[0].env[1]
          value:
            name: int
            value: "1"
      - equal:
          path: spec.template.spec.initContainers[0].env[2]
          value:
            name: string
            value: value_of_env
      - equal:
          path: spec.template.spec.initContainers[0].env[3]
          value:
            name: template
            value: RELEASE-NAME-admin

  - it: should include initContainers
    documentIndex: *controllerDoc
    set:
      controller:
        initContainers:
          from_controller:
            image: nginx
      initContainers:
        from_global:
          image: nginx
    asserts:
      - isKind:
          of: Deployment
      - contains:
          path: spec.template.spec.initContainers
          any: true
          content:
            image: nginx
            name: from_global
      - contains:
          path: spec.template.spec.initContainers
          any: true
          content:
            image: nginx
            name: from_controller
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 2
